services:
  web:
    restart: always
    build: ./triki_traka_backend
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.15"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M
    command: ./wait-for-it.sh db:5432 -- python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./triki_traka_backend/:/usr/src/triki_traka_backend
      - ./wait-for-it.sh:/wait-for-it.sh
    ports:
      - '54000:8000'
    env_file:
      - ./.env.dev
    links:
      - db:db
    depends_on:
      - db

  # users_api:
  #   build:
  #     context: ./triki_traka_backend
  #   deploy:
  #     replicas: 2
  #     resources:
  #       limits:
  #         cpus: "0.15"
  #         memory: 512M
  #       reservations:
  #         cpus: "0.1"
  #         memory: 256M
  #   ports:
  #     - "3000-3002:3000"
  #   volumes:
  #     - ./triki_traka_backend/:/usr/src/triki_traka_backend
  #   depends_on:
  #     - db
  #   networks:
  #     - dev_env_network

  db:
    restart: always
    image: postgres:12.0-alpine
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M
    ports:
      - '5432:5432'
    volumes:
      - ./postgres_data:/var/lib/postgres/data
    env_file:
      - ./.env.dev.db

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ./.env.dev.pg
    ports:
      - "53000:80"
    links:
      - db:db
    depends_on:
      - db

  nginx:
    restart: always
    build: ./nginx
    ports:
      - '80:80'
    depends_on:
      - web


volumes:
  postgres_data:

