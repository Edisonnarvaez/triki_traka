services:
  web_dev:
    restart: always
    build: ./triki_traka_backend
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.15"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./triki_traka_backend/:/Proyectos/Python/triki_traka/triki_traka_backend
    ports:
      - 52000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
    networks:
      - dev_env_network

  users_api:
    build:
      context: ./triki_traka_backend
    deploy:
      replicas: 10
      resources:
        limits:
          cpus: "0.15"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M
    expose:
      - "3000-3010:3000"
    volumes:
      - ./triki_traka_backend/:/Proyectos/Python/triki_traka/triki_traka_backend
    depends_on:
      - db
    networks:
      - dev_env_network

  db:
    restart: always
    image: postgres:12.0-alpine
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data:/var/lib/postgres/data
    env_file:
      - ./.env.dev.db
    networks:
      - dev_env_network

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ./.env.dev.pg
    ports:
      - "53000:80"
    depends_on:
      - db
    networks:
      - dev_env_network

  nginx:
    restart: always
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - web_dev
      - users_api
    networks:
      - dev_env_network

volumes:
  postgres_data:
  users_pgdata:
  pgadmin-data:

networks:
  dev_env_network:
    driver: bridge
